{"ast":null,"code":"import { all, fork, take, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* login() {\n  try {\n    const result = yield call(loginAPI);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield take(\"LOG_OUT\");\n}\n\nfunction* watchLogin() {\n  yield take(\"LOG_IN\", login);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST\");\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), //call\n  fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/index.js"],"names":["all","fork","take","call","put","axios","loginAPI","post","login","result","type","data","err","response","watchLogout","watchLogin","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,IAAI,CAACG,QAAD,CAAzB;AACA,UAAMF,GAAG,CAAC;AACRM,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMR,GAAG,CAAC;AACRM,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,WAAV,GAAwB;AACtB,QAAMZ,IAAI,CAAC,SAAD,CAAV;AACD;;AAED,UAAUa,UAAV,GAAuB;AACrB,QAAMb,IAAI,CAAC,QAAD,EAAWM,KAAX,CAAV;AACD;;AAED,UAAUQ,YAAV,GAAyB;AACvB,QAAMd,IAAI,CAAC,UAAD,CAAV;AACD;;AAED,eAAe,UAAUe,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CACRC,IAAI,CAACc,UAAD,CADI,EACU;AAClBd,EAAAA,IAAI,CAACa,WAAD,CAFI,EAGRb,IAAI,CAACe,YAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, fork, take, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\n\r\nfunction* login() {\r\n  try {\r\n    const result = yield call(loginAPI);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield take(\"LOG_OUT\");\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield take(\"LOG_IN\", login);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield take(\"ADD_POST\");\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLogin), //call\r\n    fork(watchLogout),\r\n    fork(watchAddPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
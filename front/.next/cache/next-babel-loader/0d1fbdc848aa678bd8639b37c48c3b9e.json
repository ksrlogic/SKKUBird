{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../actions\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n} // function logoutAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n\n\nfunction signupAPI(data) {\n  return axios.post(\"http://localhost:3075/user/signup\", data);\n}\n\nfunction* login() {\n  try {\n    // const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: {} //\tresult.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data, //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data //  err.response.data 고정\n\n    });\n  }\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), //  call\n  fork(watchLogout), fork(watchSignup)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","data","post","signupAPI","login","type","err","error","response","logout","signup","action","result","watchLogin","watchLogout","watchSignup","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,cADD,EAECC,cAFD,EAGCC,eAHD,EAICC,eAJD,EAKCC,cALD,EAMCC,eAND,EAOCC,eAPD,EAQCC,eARD,EASCC,eATD,QAUO,YAVP;;AAYA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACvB,SAAOX,KAAK,CAACY,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACA,C,CAED;AACA;AACA;;;AAEA,SAASE,SAAT,CAAmBF,IAAnB,EAAyB;AACxB,SAAOX,KAAK,CAACY,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,CAAP;AACA;;AAED,UAAUG,KAAV,GAAkB;AACjB,MAAI;AACH;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEd,cADG;AAETU,MAAAA,IAAI,EAAE,EAFG,CAEC;;AAFD,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOK,GAAP,EAAY;AACb,UAAMpB,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEb,cADG;AAETe,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAIA;AACD;;AAED,UAAUQ,MAAV,GAAmB;AAClB,MAAI;AACH;AACA,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEZ,eADG,CAET;;AAFS,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOa,GAAP,EAAY;AACb,UAAMpB,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEX,eADG;AAETa,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAIA;AACD;;AACD,UAAUS,MAAV,CAAiBC,MAAjB,EAAyB;AACxB,MAAI;AACH,UAAMC,MAAM,GAAG,MAAMvB,IAAI,CAACc,SAAD,EAAYQ,MAAM,CAACV,IAAnB,CAAzB;AACA,UAAMf,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEP,eADG,CAET;;AAFS,KAAD,CAAT;AAIA,GAND,CAME,OAAOQ,GAAP,EAAY;AACb,UAAMpB,GAAG,CAAC;AACTmB,MAAAA,IAAI,EAAEN,eADG;AAETQ,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAIA;AACD;;AAED,UAAUY,UAAV,GAAuB;AACtB,QAAM1B,UAAU,CAACQ,cAAD,EAAiBS,KAAjB,CAAhB;AACA;;AAED,UAAUU,WAAV,GAAwB;AACvB,QAAM3B,UAAU,CAACS,eAAD,EAAkBa,MAAlB,CAAhB;AACA;;AACD,UAAUM,WAAV,GAAwB;AACvB,QAAM5B,UAAU,CAACU,eAAD,EAAkBa,MAAlB,CAAhB;AACA;;AACD,eAAe,UAAUM,QAAV,GAAqB;AACnC,QAAMhC,GAAG,CAAC,CACTC,IAAI,CAAC4B,UAAD,CADK,EACS;AAClB5B,EAAAA,IAAI,CAAC6B,WAAD,CAFK,EAGT7B,IAAI,CAAC8B,WAAD,CAHK,CAAD,CAAT;AAKA","sourcesContent":["import { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tLOG_IN_SUCCESS,\r\n\tLOG_IN_FAILURE,\r\n\tLOG_OUT_SUCCESS,\r\n\tLOG_OUT_FAILURE,\r\n\tLOG_IN_REQUEST,\r\n\tLOG_OUT_REQUEST,\r\n\tSIGN_UP_REQUEST,\r\n\tSIGN_UP_SUCCESS,\r\n\tSIGN_UP_FAILURE,\r\n} from \"../actions\";\r\n\r\nfunction loginAPI(data) {\r\n\treturn axios.post(\"/api/login\", data);\r\n}\r\n\r\n// function logoutAPI() {\r\n//   return axios.post(\"/api/logout\");\r\n// }\r\n\r\nfunction signupAPI(data) {\r\n\treturn axios.post(\"http://localhost:3075/user/signup\", data);\r\n}\r\n\r\nfunction* login() {\r\n\ttry {\r\n\t\t// const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_SUCCESS,\r\n\t\t\tdata: {}, //\tresult.data 고정\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_FAILURE,\r\n\t\t\terror: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction* logout() {\r\n\ttry {\r\n\t\t// const result = yield call(logoutAPI);\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: LOG_OUT_SUCCESS,\r\n\t\t\t//   data: result.data, //result.data 고정\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: LOG_OUT_FAILURE,\r\n\t\t\terror: err.response.data, //  err.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\nfunction* signup(action) {\r\n\ttry {\r\n\t\tconst result = yield call(signupAPI, action.data);\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_SUCCESS,\r\n\t\t\t//   data: result.data,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: SIGN_UP_FAILURE,\r\n\t\t\terror: err.response.data,\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction* watchLogin() {\r\n\tyield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n\tyield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\nfunction* watchSignup() {\r\n\tyield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\tfork(watchLogin), //  call\r\n\t\tfork(watchLogout),\r\n\t\tfork(watchSignup),\r\n\t]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
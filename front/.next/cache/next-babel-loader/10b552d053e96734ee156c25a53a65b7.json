{"ast":null,"code":"import { all, fork, take, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\n\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* addPost() {\n  try {\n    const result = yield call(addPostAPI);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(\"LOG_IN_REQUEST\", login);\n}\n\nfunction* watchLogout() {\n  yield take(\"LOG_OUT_REQUEST\", logout);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), //call\n  fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/index.js"],"names":["all","fork","take","call","put","axios","loginAPI","data","post","logoutAPI","addPostAPI","login","action","result","type","err","response","logout","addPost","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,SAASE,SAAT,GAAqB;AACnB,SAAOJ,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAASE,UAAT,GAAsB;AACpB,SAAOL,KAAK,CAACG,IAAN,CAAW,WAAX,CAAP;AACD;;AAED,UAAUG,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMV,IAAI,CAACG,QAAD,EAAWM,MAAM,CAACL,IAAlB,CAAzB,CADE,CACgD;;AAClD,UAAMH,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,gBADE;AAERP,MAAAA,IAAI,EAAEM,MAAM,CAACN,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,gBADE;AAERP,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMJ,MAAM,GAAG,MAAMV,IAAI,CAACM,SAAD,CAAzB;AACA,UAAML,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,iBADE;AAERP,MAAAA,IAAI,EAAEM,MAAM,CAACN,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,iBADE;AAERP,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,OAAV,GAAoB;AAClB,MAAI;AACF,UAAML,MAAM,GAAG,MAAMV,IAAI,CAACO,UAAD,CAAzB;AACA,UAAMN,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE;AAERP,MAAAA,IAAI,EAAEM,MAAM,CAACN,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOQ,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE;AAERP,MAAAA,IAAI,EAAEQ,GAAG,CAACC,QAAJ,CAAaT,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,UAAV,GAAuB;AACrB,QAAMjB,IAAI,CAAC,gBAAD,EAAmBS,KAAnB,CAAV;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMlB,IAAI,CAAC,iBAAD,EAAoBe,MAApB,CAAV;AACD;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMnB,IAAI,CAAC,kBAAD,EAAqBgB,OAArB,CAAV;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CACRC,IAAI,CAACkB,UAAD,CADI,EACU;AAClBlB,EAAAA,IAAI,CAACmB,WAAD,CAFI,EAGRnB,IAAI,CAACoB,YAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, fork, take, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction logoutAPI() {\r\n  return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction addPostAPI() {\r\n  return axios.post(\"/api/post\");\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    const result = yield call(logoutAPI);\r\n    yield put({\r\n      type: \"LOG_OUT_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    const result = yield call(addPostAPI);\r\n    yield put({\r\n      type: \"ADD_POST_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"ADD_POST_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield take(\"LOG_IN_REQUEST\", login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield take(\"LOG_OUT_REQUEST\", logout);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield take(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLogin), //call\r\n    fork(watchLogout),\r\n    fork(watchAddPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\winco\\\\Desktop\\\\javascripts\\\\SKKUBird\\\\front\\\\Components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from \"react\";\nimport Form from \"antd/lib/form/Form\";\nimport { Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPostAction } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user.me;\n  }),\n      id = _useSelector2.id,\n      nickname = _useSelector2.nickname;\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var imageInput = useRef();\n  var onsubmit = useCallback(function () {\n    dispatch(addPostAction({\n      id: 2,\n      User: {\n        id: id,\n        nickname: nickname\n      },\n      content: text,\n      Images: [],\n      Comments: []\n    }));\n    setText(\"\");\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n    console.log(text);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      marginTop: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onsubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (y) {\n    return __jsx(\"div\", {\n      key: y,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: y,\n      style: {\n        width: \"200px\"\n      },\n      alt: y,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"Q8Rlnzznh71wR/qNOtdl/udysa4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/Components/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPostAction","PostForm","dispatch","state","post","imagePaths","user","me","id","nickname","text","setText","imageInput","onsubmit","User","content","Images","Comments","onClickImageUpload","current","click","onChangeText","e","target","value","console","log","marginTop","map","y","display","justifyContent","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\r\nimport Form from \"antd/lib/form/Form\";\r\nimport { Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPostAction } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const { id, nickname } = useSelector((state) => state.user.me);\r\n  const [text, setText] = useState(\"\");\r\n  const imageInput = useRef();\r\n\r\n  const onsubmit = useCallback(() => {\r\n    dispatch(\r\n      addPostAction({\r\n        id: 2,\r\n        User: {\r\n          id: id,\r\n          nickname: nickname,\r\n        },\r\n        content: text,\r\n        Images: [],\r\n        Comments: [],\r\n      })\r\n    );\r\n    setText(\"\");\r\n  }, []);\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n    console.log(text);\r\n  }, []);\r\n  return (\r\n    <Form\r\n      style={{ marginTop: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onsubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((y) => (\r\n          <div key={y} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <img src={y} style={{ width: `200px` }} alt={y} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}
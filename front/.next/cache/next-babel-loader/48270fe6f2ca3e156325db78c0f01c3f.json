{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from \"../actions\"; // function addPostAPI() {\n//   return axios.post(\"/api/post\");\n// }\n\nfunction* addPost(data) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","data","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,YAJP,C,CAMA;AACA;AACA;;AAEA,UAAUC,OAAV,CAAkBC,IAAlB,EAAwB;AACtB,MAAI;AACF;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAEJ,gBADE;AAERG,MAAAA,IAAI,EAAEA,IAFE,CAEI;;AAFJ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAEH,gBADE;AAERE,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMV,UAAU,CAACE,gBAAD,EAAmBG,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACY,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n} from \"../actions\";\r\n\r\n// function addPostAPI() {\r\n//   return axios.post(\"/api/post\");\r\n// }\r\n\r\nfunction* addPost(data) {\r\n  try {\r\n    // const result = yield call(addPostAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
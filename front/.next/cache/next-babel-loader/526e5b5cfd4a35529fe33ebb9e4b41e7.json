{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../actions\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"비내리는~\"\n    },\n    content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\n    Images: [{\n      src: \"/profile.PNG\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 !!\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"멋지다!\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  // ADD POST\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  // ADD COMMENT\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var addPostAction = function addPostAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentAction = function addCommentAction() {\n  return {\n    type: ADD_COMMENT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [action.data.data].concat(_toConsumableArray(state.mainPosts)),\n        addPostDone: true,\n        addPostLoading: false\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostDone: false,\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addPostError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/reducers/post.js"],"names":["ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","addPostAction","data","type","addCommentAction","reducer","state","action","error"],"mappings":";;;;;;;AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,YAPP;AASA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,yBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EAAE;AADP,KADM,EAIN;AACEA,MAAAA,GAAG,EAAE;AADP,KAJM,EAON;AACEA,MAAAA,GAAG,EAAE;AADP,KAPM,CAPV;AAkBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AAlBZ,GADS,CADe;AAoC1BI,EAAAA,UAAU,EAAE,EApCc;AAqC1BC,EAAAA,cAAc,EAAE,KArCU;AAqCH;AACvBC,EAAAA,WAAW,EAAE,KAtCa;AAuC1BC,EAAAA,YAAY,EAAE,IAvCY;AAwC1BC,EAAAA,iBAAiB,EAAE,KAxCO;AAwCA;AAC1BC,EAAAA,cAAc,EAAE,KAzCU;AA0C1BC,EAAAA,eAAe,EAAE;AA1CS,CAArB;AA6CP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAExB,gBADD;AAELuB,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO;AACLD,IAAAA,IAAI,EAAErB;AADD,GAAP;AAGD,CAJM;;AAMP,IAAMuB,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBrB,YAAyB;AAAA,MAAXsB,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKxB,gBAAL;AACE,6CACK2B,KADL;AAEEX,QAAAA,cAAc,EAAE;AAFlB;;AAIF,SAAKf,gBAAL;AACE,6CACK0B,KADL;AAEEpB,QAAAA,SAAS,GAAGqB,MAAM,CAACL,IAAP,CAAYA,IAAf,4BAAwBI,KAAK,CAACpB,SAA9B,EAFX;AAGEU,QAAAA,WAAW,EAAE,IAHf;AAIED,QAAAA,cAAc,EAAE;AAJlB;;AAMF,SAAKd,gBAAL;AACE,6CACKyB,KADL;AAEEV,QAAAA,WAAW,EAAE,KAFf;AAGED,QAAAA,cAAc,EAAE,KAHlB;AAIEE,QAAAA,YAAY,EAAEU,MAAM,CAACC;AAJvB;;AAMF,SAAK1B,mBAAL;AACE,6CACKwB,KADL;AAEER,QAAAA,iBAAiB,EAAE;AAFrB;;AAIF,SAAKf,mBAAL;AACE,6CACKuB,KADL;AAEER,QAAAA,iBAAiB,EAAE,KAFrB;AAGEC,QAAAA,cAAc,EAAE;AAHlB;;AAKF,SAAKf,mBAAL;AACE,6CACKsB,KADL;AAEER,QAAAA,iBAAiB,EAAE,KAFrB;AAGED,QAAAA,YAAY,EAAEU,MAAM,CAACC;AAHvB;;AAKF;AACE,aAAOF,KAAP;AAtCJ;AAwCD,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["import {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../actions\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"비내리는~\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\r\n      Images: [\r\n        {\r\n          src: \"/profile.PNG\",\r\n        },\r\n        {\r\n          src: \"https://picsum.photos/seed/picsum/200/300\",\r\n        },\r\n        {\r\n          src: \"https://picsum.photos/seed/picsum/200/300\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 !!\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"멋지다!\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false, // ADD POST\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false, // ADD COMMENT\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const addPostAction = (data) => {\r\n  return {\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const addCommentAction = () => {\r\n  return {\r\n    type: ADD_COMMENT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data.data, ...state.mainPosts],\r\n        addPostDone: true,\r\n        addPostLoading: false,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostDone: false,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n      };\r\n    case ADD_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
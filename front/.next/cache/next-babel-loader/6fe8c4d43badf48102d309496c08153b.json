{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"비내리는~\"\n    },\n    content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\n    Images: [{\n      src: \"/profile.PNG\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 !!\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"멋지다!\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  postLoading: false\n};\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const addPostAction = () => {\n  return {\n    type: ADD_POST\n  };\n};\nconst dummyPost = {\n  id: 2,\n  content: `더미데이터`,\n  User: {\n    id: 1,\n    nickname: \"안녕!\"\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postAdded: true,\n        postLoading: true\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n        postLoading: false\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postAdded: false,\n        postLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","postLoading","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPostAction","type","ADD_POST","dummyPost","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,yBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EAAE;AADP,KADM,EAIN;AACEA,MAAAA,GAAG,EAAE;AADP,KAJM,EAON;AACEA,MAAAA,GAAG,EAAE;AADP,KAPM,CAPV;AAkBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AAlBZ,GADS,CADe;AAoC1BI,EAAAA,UAAU,EAAE,EApCc;AAqC1BC,EAAAA,SAAS,EAAE,KArCe;AAsC1BC,EAAAA,WAAW,EAAE;AAtCa,CAArB;AAyCP,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEC;AADD,GAAP;AAGD,CAJM;AAMP,MAAMC,SAAS,GAAG;AAChBhB,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAG,OAFM;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBE,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;;AAWA,MAAMW,OAAO,GAAG,CAACC,KAAK,GAAGpB,YAAT,EAAuBqB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKJ,gBAAL;AACE,6CACKQ,KADL;AAEEV,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAKE,gBAAL;AACE,6CACKO,KADL;AAEEnB,QAAAA,SAAS,EAAE,CAACiB,SAAD,EAAY,GAAGE,KAAK,CAACnB,SAArB,CAFb;AAGES,QAAAA,SAAS,EAAE,IAHb;AAIEC,QAAAA,WAAW,EAAE;AAJf;;AAMF,SAAKG,gBAAL;AACE,6CACKM,KADL;AAEEV,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,WAAW,EAAE;AAHf;;AAKF;AACE,aAAOS,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"비내리는~\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\r\n      Images: [\r\n        {\r\n          src: \"/profile.PNG\",\r\n        },\r\n        {\r\n          src: \"https://picsum.photos/seed/picsum/200/300\",\r\n        },\r\n        {\r\n          src: \"https://picsum.photos/seed/picsum/200/300\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 !!\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"멋지다!\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  postAdded: false,\r\n  postLoading: false,\r\n};\r\n\r\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const addPostAction = () => {\r\n  return {\r\n    type: ADD_POST,\r\n  };\r\n};\r\n\r\nconst dummyPost = {\r\n  id: 2,\r\n  content: `더미데이터`,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"안녕!\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        postAdded: true,\r\n        postLoading: true,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost, ...state.mainPosts],\r\n        postAdded: true,\r\n        postLoading: false,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        postAdded: false,\r\n        postLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
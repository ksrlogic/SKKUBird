{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\winco\\\\Desktop\\\\javascripts\\\\SKKUBird\\\\front\\\\Components\\\\PostCard\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Button, Popover, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { removePostAction } from \"../../reducers/post\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: CommentFormOpened,\n    1: setCommendFormOpened\n  } = useState(false);\n  const dispatch = useDispatch();\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommendFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch(removePostAction(post.id));\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    className: \"icons_wrapper\",\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }\n    }),\n    actions: [__jsx(React.Fragment, null, __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    })))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  })), CommentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/Components/PostCard/PostCard.js"],"names":["React","useCallback","useState","PropTypes","Card","Button","Popover","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","useDispatch","PostImages","CommentForm","PostCardContent","removePostAction","PostCard","post","id","state","user","me","liked","setLiked","CommentFormOpened","setCommendFormOpened","dispatch","onToggleLike","prev","onToggleComment","onRemovePost","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Button, Popover, Avatar, List, Comment } from \"antd\";\r\nimport {\r\n\tRetweetOutlined,\r\n\tHeartOutlined,\r\n\tMessageOutlined,\r\n\tEllipsisOutlined,\r\n\tHeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { removePostAction } from \"../../reducers/post\";\r\n\r\nconst PostCard = ({ post }) => {\r\n\tconst id = useSelector(state => state.user.me?.id);\r\n\tconst [liked, setLiked] = useState(false);\r\n\tconst [CommentFormOpened, setCommendFormOpened] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onToggleLike = useCallback(() => {\r\n\t\tsetLiked(prev => !prev);\r\n\t}, []);\r\n\r\n\tconst onToggleComment = useCallback(() => {\r\n\t\tsetCommendFormOpened(prev => !prev);\r\n\t}, []);\r\n\r\n\tconst onRemovePost = useCallback(() => {\r\n\t\tdispatch(removePostAction(post.id));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card\r\n\t\t\t\tclassName=\"icons_wrapper\"\r\n\t\t\t\tcover={post.Images[0] && <PostImages images={post.Images} />}\r\n\t\t\t\tactions={[\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<RetweetOutlined key=\"retweet\" />\r\n\t\t\t\t\t\t{liked ? (\r\n\t\t\t\t\t\t\t<HeartTwoTone key=\"heart\" twoToneColor=\"#eb2f96\" onClick={onToggleLike} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<MessageOutlined key=\"comment\" onClick={onToggleComment} />\r\n\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\tkey=\"more\"\r\n\t\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t\t\t\t{id && post.User.id === id ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button>수정</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"danger\" onClick={onRemovePost}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Button>신고</Button>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<EllipsisOutlined />\r\n\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t</>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Card.Meta\r\n\t\t\t\t\tavatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\ttitle={post.User.nickname}\r\n\t\t\t\t\tdescription={<PostCardContent postData={post.content} />}\r\n\t\t\t\t/>\r\n\t\t\t</Card>\r\n\t\t\t{CommentFormOpened && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CommentForm post={post} />\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\theader={`${post.Comments.length}개의 댓글`}\r\n\t\t\t\t\t\titemLayout=\"horizontal\"\r\n\t\t\t\t\t\tdataSource={post.Comments}\r\n\t\t\t\t\t\trenderItem={item => (\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\t\tauthor={item.User.nickname}\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n\t\t\t\t\t\t\t\t\tcontent={item.content}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nPostCard.propTypes = {\r\n\tpost: PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tUser: PropTypes.object,\r\n\t\tcontent: PropTypes.string,\r\n\t\tcreatedAt: PropTypes.object,\r\n\t\tComments: PropTypes.arrayOf(PropTypes.object),\r\n\t\tImages: PropTypes.arrayOf(PropTypes.object),\r\n\t}).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../actions\"; // function addPostAPI() {\n//   return axios.post(\"/api/post\");\n// }\n\nfunction* addComment(data) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data //\tresult.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* addPost({\n  data\n}) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data //\tresult.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchCommentPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchCommentPost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addComment","data","type","err","response","addPost","watchAddPost","watchCommentPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AAEA,SACCC,gBADD,EAECC,gBAFD,EAGCC,gBAHD,EAICC,mBAJD,EAKCC,mBALD,EAMCC,mBAND,QAOO,YAPP,C,CASA;AACA;AACA;;AAEA,UAAUC,UAAV,CAAqBC,IAArB,EAA2B;AAC1B,MAAI;AACH;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACTW,MAAAA,IAAI,EAAEJ,mBADG;AAETG,MAAAA,IAFS,CAEH;;AAFG,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOE,GAAP,EAAY;AACb,UAAMZ,GAAG,CAAC;AACTW,MAAAA,IAAI,EAAEH,mBADG;AAETE,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH,IAFV,CAEgB;;AAFhB,KAAD,CAAT;AAIA;AACD;;AACD,UAAUI,OAAV,CAAkB;AAAEJ,EAAAA;AAAF,CAAlB,EAA4B;AAC3B,MAAI;AACH;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACTW,MAAAA,IAAI,EAAEP,gBADG;AAETM,MAAAA,IAFS,CAEH;;AAFG,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOE,GAAP,EAAY;AACb,UAAMZ,GAAG,CAAC;AACTW,MAAAA,IAAI,EAAEN,gBADG;AAETK,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH,IAFV,CAEgB;;AAFhB,KAAD,CAAT;AAIA;AACD;;AAED,UAAUK,YAAV,GAAyB;AACxB,QAAMd,UAAU,CAACE,gBAAD,EAAmBW,OAAnB,CAAhB;AACA;;AAED,UAAUE,gBAAV,GAA6B;AAC5B,QAAMf,UAAU,CAACK,mBAAD,EAAsBG,UAAtB,CAAhB;AACA;;AACD,eAAe,UAAUQ,QAAV,GAAqB;AACnC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,YAAD,CAAL,EAAqBhB,IAAI,CAACiB,gBAAD,CAAzB,CAAD,CAAT;AACA","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\r\n\r\nimport {\r\n\tADD_POST_REQUEST,\r\n\tADD_POST_SUCCESS,\r\n\tADD_POST_FAILURE,\r\n\tADD_COMMENT_REQUEST,\r\n\tADD_COMMENT_SUCCESS,\r\n\tADD_COMMENT_FAILURE,\r\n} from \"../actions\";\r\n\r\n// function addPostAPI() {\r\n//   return axios.post(\"/api/post\");\r\n// }\r\n\r\nfunction* addComment(data) {\r\n\ttry {\r\n\t\t// const result = yield call(addPostAPI);\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_SUCCESS,\r\n\t\t\tdata, //\tresult.data 고정\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_FAILURE,\r\n\t\t\tdata: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\nfunction* addPost({ data }) {\r\n\ttry {\r\n\t\t// const result = yield call(addPostAPI);\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_SUCCESS,\r\n\t\t\tdata, //\tresult.data 고정\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_FAILURE,\r\n\t\t\tdata: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction* watchAddPost() {\r\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchCommentPost() {\r\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nexport default function* postSaga() {\r\n\tyield all([fork(watchAddPost), fork(watchCommentPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
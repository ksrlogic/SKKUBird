{"ast":null,"code":"import shortid from \"shortid\";\nimport { produce } from \"immer\";\nimport faker from \"faker\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from \"../actions\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"비내리는~\"\n    },\n    content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\n    Images: [{\n      src: \"/profile.PNG\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 !!\"\n    }, {\n      id: shortid.generate(),\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"멋지다!\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  // ADD POST\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  // ADD COMMENT\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  // Remove POST\n  removePostDone: false,\n  removePostError: null\n};\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"KSR\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  }\n});\n\ninitialState.mainPosts.concat(Array(20).fill().map((v, i) => ({\n  id: shortid.generate(),\n  User: {\n    id: shortid.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [],\n  Comments: []\n})));\nexport const addPostAction = data => {\n  return {\n    type: ADD_POST_REQUEST,\n    data\n  };\n};\nexport const removePostAction = data => {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data\n  };\n};\nexport const addCommentAction = () => {\n  return {\n    type: ADD_COMMENT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostDone = true;\n        draft.addPostLoading = false;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostDone = false;\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/reducers/post.js"],"names":["shortid","produce","faker","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","dummyPost","data","dummyComment","concat","Array","fill","map","v","i","name","findName","lorem","paragraph","addPostAction","type","removePostAction","addCommentAction","reducer","state","action","draft","unshift","error","post","find","postId","filter"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\r\nimport { produce } from \"immer\";\r\nimport faker from \"faker\";\r\n\r\nimport {\r\n\tADD_POST_REQUEST,\r\n\tADD_POST_SUCCESS,\r\n\tADD_POST_FAILURE,\r\n\tADD_COMMENT_REQUEST,\r\n\tADD_COMMENT_SUCCESS,\r\n\tADD_COMMENT_FAILURE,\r\n\tREMOVE_POST_REQUEST,\r\n\tREMOVE_POST_SUCCESS,\r\n\tREMOVE_POST_FAILURE,\r\n} from \"../actions\";\r\n\r\nexport const initialState = {\r\n\tmainPosts: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tUser: {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tnickname: \"비내리는~\",\r\n\t\t\t},\r\n\t\t\tcontent: \"첫 번째 게시글 #해시태그 ###익스프레스\",\r\n\t\t\tImages: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"/profile.PNG\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"https://picsum.photos/seed/picsum/200/300\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"https://picsum.photos/seed/picsum/200/300\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tComments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortid.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: \"nero\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: \"우와 !!\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortid.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: \"hero\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: \"멋지다!\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\timagePaths: [],\r\n\taddPostLoading: false, // ADD POST\r\n\taddPostDone: false,\r\n\taddPostError: null,\r\n\taddCommentLoading: false, // ADD COMMENT\r\n\taddCommentDone: false,\r\n\taddCommentError: null,\r\n\tremovePostLoading: false, // Remove POST\r\n\tremovePostDone: false,\r\n\tremovePostError: null,\r\n};\r\n\r\nconst dummyPost = data => ({\r\n\tid: data.id,\r\n\tcontent: data.content,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: \"KSR\",\r\n\t},\r\n\tImages: [],\r\n\tComments: [],\r\n});\r\n\r\nconst dummyComment = data => ({\r\n\tid: shortid.generate(),\r\n\tcontent: data,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: \"제로초\",\r\n\t},\r\n});\r\n\r\ninitialState.mainPosts.concat(\r\n\tArray(20)\r\n\t\t.fill()\r\n\t\t.map((v, i) => ({\r\n\t\t\tid: shortid.generate(),\r\n\t\t\tUser: {\r\n\t\t\t\tid: shortid.generate(),\r\n\t\t\t\tnickname: faker.name.findName(),\r\n\t\t\t},\r\n\t\t\tcontent: faker.lorem.paragraph(),\r\n\t\t\tImages: [],\r\n\t\t\tComments: [],\r\n\t\t})),\r\n);\r\n\r\nexport const addPostAction = data => {\r\n\treturn {\r\n\t\ttype: ADD_POST_REQUEST,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\nexport const removePostAction = data => {\r\n\treturn {\r\n\t\ttype: REMOVE_POST_REQUEST,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\nexport const addCommentAction = () => {\r\n\treturn {\r\n\t\ttype: ADD_COMMENT_REQUEST,\r\n\t};\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\treturn produce(state, draft => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase ADD_POST_REQUEST:\r\n\t\t\t\tdraft.addPostLoading = true;\r\n\t\t\t\tdraft.addPostDone = false;\r\n\t\t\t\tdraft.addPostError = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_POST_SUCCESS:\r\n\t\t\t\tdraft.mainPosts.unshift(dummyPost(action.data));\r\n\t\t\t\tdraft.addPostDone = true;\r\n\t\t\t\tdraft.addPostLoading = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_POST_FAILURE:\r\n\t\t\t\tdraft.addPostDone = false;\r\n\t\t\t\tdraft.addPostLoading = false;\r\n\t\t\t\tdraft.addPostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_COMMENT_REQUEST:\r\n\t\t\t\tdraft.addCommentLoading = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_COMMENT_SUCCESS: {\r\n\t\t\t\tconst post = draft.mainPosts.find(v => v.id === action.data.postId);\r\n\t\t\t\tpost.Comments.unshift(dummyComment(action.data.content));\r\n\t\t\t\tdraft.addCommentLoading = false;\r\n\t\t\t\tdraft.addCommentDone = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase ADD_COMMENT_FAILURE:\r\n\t\t\t\tdraft.addCommentLoading = false;\r\n\t\t\t\tdraft.addPostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_REQUEST:\r\n\t\t\t\tdraft.removePostLoading = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_SUCCESS:\r\n\t\t\t\tdraft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\r\n\t\t\t\tdraft.removePostLoading = false;\r\n\t\t\t\tdraft.removePostDone = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_FAILURE:\r\n\t\t\t\tdraft.removePostLoading = false;\r\n\t\t\t\tdraft.removePostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
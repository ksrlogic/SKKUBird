{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport shortid from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_POST_TO_ME, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_OF_ME } from \"../actions\"; // prettier-ignore\n// function addPostAPI() {\n//   return axios.post(\"/api/post\");\n// }\n// function removePostAPI() {\n//   return axios.post(\"/api/post\");\n// }\n\nfunction* addComment({\n  data\n}) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data //\tresult.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* addPost({\n  data\n}) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: data\n      } //\tresult.data 고정\n\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* removePost({\n  data\n}) {\n  try {\n    // const result = yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data //\tresult.data 고정\n\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchCommentPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchCommentPost), fork(watchRemovePost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_OF_ME","addComment","data","type","err","response","addPost","id","generate","content","removePost","watchAddPost","watchRemovePost","watchCommentPost","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\r\nimport shortid from \"shortid\";\r\n\r\nimport {\r\n\tADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n\tADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n\tADD_POST_TO_ME,\r\n\tREMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\r\n\tREMOVE_POST_OF_ME,\r\n} from \"../actions\"; // prettier-ignore\r\n\r\n// function addPostAPI() {\r\n//   return axios.post(\"/api/post\");\r\n// }\r\n// function removePostAPI() {\r\n//   return axios.post(\"/api/post\");\r\n// }\r\n\r\nfunction* addComment({ data }) {\r\n\ttry {\r\n\t\t// const result = yield call(addPostAPI);\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_SUCCESS,\r\n\t\t\tdata, //\tresult.data 고정\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: ADD_COMMENT_FAILURE,\r\n\t\t\tdata: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\nfunction* addPost({ data }) {\r\n\ttry {\r\n\t\t// const result = yield call(addPostAPI);\r\n\t\tyield delay(1000);\r\n\t\tconst id = shortid.generate();\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_SUCCESS,\r\n\t\t\tdata: {\r\n\t\t\t\tid,\r\n\t\t\t\tcontent: data,\r\n\t\t\t}, //\tresult.data 고정\r\n\t\t});\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_TO_ME,\r\n\t\t\tdata: id,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: ADD_POST_FAILURE,\r\n\t\t\tdata: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction* removePost({ data }) {\r\n\ttry {\r\n\t\t// const result = yield call(removePostAPI);\r\n\t\tyield delay(1000);\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_SUCCESS,\r\n\t\t\tdata, //\tresult.data 고정\r\n\t\t});\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_OF_ME,\r\n\t\t\tdata,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype: REMOVE_POST_FAILURE,\r\n\t\t\tdata: err.response.data, //\terr.response.data 고정\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction* watchAddPost() {\r\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n\tyield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchCommentPost() {\r\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nexport default function* postSaga() {\r\n\tyield all([fork(watchAddPost), fork(watchCommentPost), fork(watchRemovePost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import shortid from \"shortid\";\nimport { produce } from \"immer\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from \"../actions\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"비내리는~\"\n    },\n    content: \"첫 번째 게시글 #해시태그 ###익스프레스\",\n    Images: [{\n      src: \"/profile.PNG\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }, {\n      src: \"https://picsum.photos/seed/picsum/200/300\"\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 !!\"\n    }, {\n      id: shortid.generate(),\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"멋지다!\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  // ADD POST\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  // ADD COMMENT\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  // Remove POST\n  removePostDone: false,\n  removePostError: null\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"KSR\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nexport var addPostAction = function addPostAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var removePostAction = function removePostAction(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentAction = function addCommentAction() {\n  return {\n    type: ADD_COMMENT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostDone = true;\n        draft.addPostLoading = false;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostDone = false;\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/reducers/post.js"],"names":["shortid","produce","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","dummyPost","data","dummyComment","addPostAction","type","removePostAction","addCommentAction","reducer","state","action","draft","unshift","error","post","find","v","postId","filter"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SACCC,gBADD,EAECC,gBAFD,EAGCC,gBAHD,EAICC,mBAJD,EAKCC,mBALD,EAMCC,mBAND,EAOCC,mBAPD,EAQCC,mBARD,EASCC,mBATD,QAUO,YAVP;AAYA,OAAO,IAAMC,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE;AACLD,MAAAA,EAAE,EAAE,CADC;AAELE,MAAAA,QAAQ,EAAE;AAFL,KAFP;AAMCC,IAAAA,OAAO,EAAE,yBANV;AAOCC,IAAAA,MAAM,EAAE,CACP;AACCC,MAAAA,GAAG,EAAE;AADN,KADO,EAIP;AACCA,MAAAA,GAAG,EAAE;AADN,KAJO,EAOP;AACCA,MAAAA,GAAG,EAAE;AADN,KAPO,CAPT;AAkBCC,IAAAA,QAAQ,EAAE,CACT;AACCN,MAAAA,EAAE,EAAEb,OAAO,CAACoB,QAAR,EADL;AAECN,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OAFP;AAKCC,MAAAA,OAAO,EAAE;AALV,KADS,EAQT;AACCH,MAAAA,EAAE,EAAEb,OAAO,CAACoB,QAAR,EADL;AAECN,MAAAA,IAAI,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OAFP;AAKCC,MAAAA,OAAO,EAAE;AALV,KARS;AAlBX,GADU,CADgB;AAsC3BK,EAAAA,UAAU,EAAE,EAtCe;AAuC3BC,EAAAA,cAAc,EAAE,KAvCW;AAuCJ;AACvBC,EAAAA,WAAW,EAAE,KAxCc;AAyC3BC,EAAAA,YAAY,EAAE,IAzCa;AA0C3BC,EAAAA,iBAAiB,EAAE,KA1CQ;AA0CD;AAC1BC,EAAAA,cAAc,EAAE,KA3CW;AA4C3BC,EAAAA,eAAe,EAAE,IA5CU;AA6C3BC,EAAAA,iBAAiB,EAAE,KA7CQ;AA6CD;AAC1BC,EAAAA,cAAc,EAAE,KA9CW;AA+C3BC,EAAAA,eAAe,EAAE;AA/CU,CAArB;;AAkDP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI;AAAA,SAAK;AAC1BnB,IAAAA,EAAE,EAAEmB,IAAI,CAACnB,EADiB;AAE1BG,IAAAA,OAAO,EAAEgB,IAAI,CAAChB,OAFY;AAG1BF,IAAAA,IAAI,EAAE;AACLD,MAAAA,EAAE,EAAE,CADC;AAELE,MAAAA,QAAQ,EAAE;AAFL,KAHoB;AAO1BE,IAAAA,MAAM,EAAE,EAPkB;AAQ1BE,IAAAA,QAAQ,EAAE;AARgB,GAAL;AAAA,CAAtB;;AAWA,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAAAD,IAAI;AAAA,SAAK;AAC7BnB,IAAAA,EAAE,EAAEb,OAAO,CAACoB,QAAR,EADyB;AAE7BJ,IAAAA,OAAO,EAAEgB,IAFoB;AAG7BlB,IAAAA,IAAI,EAAE;AACLD,MAAAA,EAAE,EAAE,CADC;AAELE,MAAAA,QAAQ,EAAE;AAFL;AAHuB,GAAL;AAAA,CAAzB;;AASA,OAAO,IAAMmB,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,IAAI,EAAI;AACpC,SAAO;AACNG,IAAAA,IAAI,EAAEjC,gBADA;AAEN8B,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA,CALM;AAOP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAJ,IAAI,EAAI;AACvC,SAAO;AACNG,IAAAA,IAAI,EAAE3B,mBADA;AAENwB,IAAAA,IAAI,EAAJA;AAFM,GAAP;AAIA,CALM;AAOP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACrC,SAAO;AACNF,IAAAA,IAAI,EAAE9B;AADA,GAAP;AAGA,CAJM;;AAMP,IAAMiC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB5B,YAAyB;AAAA,MAAX6B,MAAW;AACjD,SAAOvC,OAAO,CAACsC,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC9B,YAAQD,MAAM,CAACL,IAAf;AACC,WAAKjC,gBAAL;AACCuC,QAAAA,KAAK,CAACnB,cAAN,GAAuB,IAAvB;AACAmB,QAAAA,KAAK,CAAClB,WAAN,GAAoB,KAApB;AACAkB,QAAAA,KAAK,CAACjB,YAAN,GAAqB,IAArB;AACA;;AACD,WAAKrB,gBAAL;AACCsC,QAAAA,KAAK,CAAC7B,SAAN,CAAgB8B,OAAhB,CAAwBX,SAAS,CAACS,MAAM,CAACR,IAAR,CAAjC;AACAS,QAAAA,KAAK,CAAClB,WAAN,GAAoB,IAApB;AACAkB,QAAAA,KAAK,CAACnB,cAAN,GAAuB,KAAvB;AACA;;AACD,WAAKlB,gBAAL;AACCqC,QAAAA,KAAK,CAAClB,WAAN,GAAoB,KAApB;AACAkB,QAAAA,KAAK,CAACnB,cAAN,GAAuB,KAAvB;AACAmB,QAAAA,KAAK,CAACjB,YAAN,GAAqBgB,MAAM,CAACG,KAA5B;AACA;;AACD,WAAKtC,mBAAL;AACCoC,QAAAA,KAAK,CAAChB,iBAAN,GAA0B,IAA1B;AACA;;AACD,WAAKnB,mBAAL;AAA0B;AACzB,cAAMsC,IAAI,GAAGH,KAAK,CAAC7B,SAAN,CAAgBiC,IAAhB,CAAqB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACjC,EAAF,KAAS2B,MAAM,CAACR,IAAP,CAAYe,MAAzB;AAAA,WAAtB,CAAb;AACAH,UAAAA,IAAI,CAACzB,QAAL,CAAcuB,OAAd,CAAsBT,YAAY,CAACO,MAAM,CAACR,IAAP,CAAYhB,OAAb,CAAlC;AACAyB,UAAAA,KAAK,CAAChB,iBAAN,GAA0B,KAA1B;AACAgB,UAAAA,KAAK,CAACf,cAAN,GAAuB,IAAvB;AACA;AACA;;AACD,WAAKnB,mBAAL;AACCkC,QAAAA,KAAK,CAAChB,iBAAN,GAA0B,KAA1B;AACAgB,QAAAA,KAAK,CAACjB,YAAN,GAAqBgB,MAAM,CAACG,KAA5B;AACA;;AACD,WAAKnC,mBAAL;AACCiC,QAAAA,KAAK,CAACb,iBAAN,GAA0B,IAA1B;AACA;;AACD,WAAKnB,mBAAL;AACCgC,QAAAA,KAAK,CAAC7B,SAAN,GAAkB6B,KAAK,CAAC7B,SAAN,CAAgBoC,MAAhB,CAAuB,UAAAF,CAAC;AAAA,iBAAIA,CAAC,CAACjC,EAAF,KAAS2B,MAAM,CAACR,IAApB;AAAA,SAAxB,CAAlB;AACAS,QAAAA,KAAK,CAACb,iBAAN,GAA0B,KAA1B;AACAa,QAAAA,KAAK,CAACZ,cAAN,GAAuB,IAAvB;AACA;;AACD,WAAKnB,mBAAL;AACC+B,QAAAA,KAAK,CAACb,iBAAN,GAA0B,KAA1B;AACAa,QAAAA,KAAK,CAACX,eAAN,GAAwBU,MAAM,CAACG,KAA/B;AACA;;AACD;AACC;AA3CF;AA6CA,GA9Ca,CAAd;AA+CA,CAhDD;;AAkDA,eAAeL,OAAf","sourcesContent":["import shortid from \"shortid\";\r\nimport { produce } from \"immer\";\r\n\r\nimport {\r\n\tADD_POST_REQUEST,\r\n\tADD_POST_SUCCESS,\r\n\tADD_POST_FAILURE,\r\n\tADD_COMMENT_REQUEST,\r\n\tADD_COMMENT_SUCCESS,\r\n\tADD_COMMENT_FAILURE,\r\n\tREMOVE_POST_REQUEST,\r\n\tREMOVE_POST_SUCCESS,\r\n\tREMOVE_POST_FAILURE,\r\n} from \"../actions\";\r\n\r\nexport const initialState = {\r\n\tmainPosts: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tUser: {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tnickname: \"비내리는~\",\r\n\t\t\t},\r\n\t\t\tcontent: \"첫 번째 게시글 #해시태그 ###익스프레스\",\r\n\t\t\tImages: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"/profile.PNG\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"https://picsum.photos/seed/picsum/200/300\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsrc: \"https://picsum.photos/seed/picsum/200/300\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tComments: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortid.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: \"nero\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: \"우와 !!\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: shortid.generate(),\r\n\t\t\t\t\tUser: {\r\n\t\t\t\t\t\tnickname: \"hero\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontent: \"멋지다!\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\timagePaths: [],\r\n\taddPostLoading: false, // ADD POST\r\n\taddPostDone: false,\r\n\taddPostError: null,\r\n\taddCommentLoading: false, // ADD COMMENT\r\n\taddCommentDone: false,\r\n\taddCommentError: null,\r\n\tremovePostLoading: false, // Remove POST\r\n\tremovePostDone: false,\r\n\tremovePostError: null,\r\n};\r\n\r\nconst dummyPost = data => ({\r\n\tid: data.id,\r\n\tcontent: data.content,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: \"KSR\",\r\n\t},\r\n\tImages: [],\r\n\tComments: [],\r\n});\r\n\r\nconst dummyComment = data => ({\r\n\tid: shortid.generate(),\r\n\tcontent: data,\r\n\tUser: {\r\n\t\tid: 1,\r\n\t\tnickname: \"제로초\",\r\n\t},\r\n});\r\n\r\nexport const addPostAction = data => {\r\n\treturn {\r\n\t\ttype: ADD_POST_REQUEST,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\nexport const removePostAction = data => {\r\n\treturn {\r\n\t\ttype: REMOVE_POST_REQUEST,\r\n\t\tdata,\r\n\t};\r\n};\r\n\r\nexport const addCommentAction = () => {\r\n\treturn {\r\n\t\ttype: ADD_COMMENT_REQUEST,\r\n\t};\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\treturn produce(state, draft => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase ADD_POST_REQUEST:\r\n\t\t\t\tdraft.addPostLoading = true;\r\n\t\t\t\tdraft.addPostDone = false;\r\n\t\t\t\tdraft.addPostError = null;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_POST_SUCCESS:\r\n\t\t\t\tdraft.mainPosts.unshift(dummyPost(action.data));\r\n\t\t\t\tdraft.addPostDone = true;\r\n\t\t\t\tdraft.addPostLoading = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_POST_FAILURE:\r\n\t\t\t\tdraft.addPostDone = false;\r\n\t\t\t\tdraft.addPostLoading = false;\r\n\t\t\t\tdraft.addPostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_COMMENT_REQUEST:\r\n\t\t\t\tdraft.addCommentLoading = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ADD_COMMENT_SUCCESS: {\r\n\t\t\t\tconst post = draft.mainPosts.find(v => v.id === action.data.postId);\r\n\t\t\t\tpost.Comments.unshift(dummyComment(action.data.content));\r\n\t\t\t\tdraft.addCommentLoading = false;\r\n\t\t\t\tdraft.addCommentDone = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase ADD_COMMENT_FAILURE:\r\n\t\t\t\tdraft.addCommentLoading = false;\r\n\t\t\t\tdraft.addPostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_REQUEST:\r\n\t\t\t\tdraft.removePostLoading = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_SUCCESS:\r\n\t\t\t\tdraft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\r\n\t\t\t\tdraft.removePostLoading = false;\r\n\t\t\t\tdraft.removePostDone = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_POST_FAILURE:\r\n\t\t\t\tdraft.removePostLoading = false;\r\n\t\t\t\tdraft.removePostError = action.error;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
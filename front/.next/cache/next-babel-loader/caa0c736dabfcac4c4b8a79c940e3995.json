{"ast":null,"code":"import { all, fork, take, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction logoutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\n\nfunction* login() {\n  try {\n    const result = yield call(loginAPI);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* addPost() {\n  try {\n    const result = yield call(addPostAPI);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data //err.response.data 고정\n\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(\"LOG_IN_REQUEST\", login);\n}\n\nfunction* watchLogout() {\n  yield take(\"LOG_OUT_REQUEST\", logout);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), //call\n  fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/index.js"],"names":["all","fork","take","call","put","axios","loginAPI","post","logoutAPI","addPostAPI","login","result","type","data","err","response","logout","addPost","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAOH,KAAK,CAACE,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAASE,UAAT,GAAsB;AACpB,SAAOJ,KAAK,CAACE,IAAN,CAAW,WAAX,CAAP;AACD;;AAED,UAAUG,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACG,QAAD,CAAzB;AACA,UAAMF,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,MAAV,GAAmB;AACjB,MAAI;AACF,UAAML,MAAM,GAAG,MAAMR,IAAI,CAACK,SAAD,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMN,MAAM,GAAG,MAAMR,IAAI,CAACM,UAAD,CAAzB;AACA,UAAML,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,kBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,kBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF,IAFX,CAEiB;;AAFjB,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,UAAV,GAAuB;AACrB,QAAMhB,IAAI,CAAC,gBAAD,EAAmBQ,KAAnB,CAAV;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMjB,IAAI,CAAC,iBAAD,EAAoBc,MAApB,CAAV;AACD;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMlB,IAAI,CAAC,kBAAD,EAAqBe,OAArB,CAAV;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CACRC,IAAI,CAACiB,UAAD,CADI,EACU;AAClBjB,EAAAA,IAAI,CAACkB,WAAD,CAFI,EAGRlB,IAAI,CAACmB,YAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, fork, take, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\n\r\nfunction logoutAPI() {\r\n  return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction addPostAPI() {\r\n  return axios.post(\"/api/post\");\r\n}\r\n\r\nfunction* login() {\r\n  try {\r\n    const result = yield call(loginAPI);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    const result = yield call(logoutAPI);\r\n    yield put({\r\n      type: \"LOG_OUT_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    const result = yield call(addPostAPI);\r\n    yield put({\r\n      type: \"ADD_POST_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"ADD_POST_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield take(\"LOG_IN_REQUEST\", login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield take(\"LOG_OUT_REQUEST\", logout);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield take(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLogin), //call\r\n    fork(watchLogout),\r\n    fork(watchAddPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
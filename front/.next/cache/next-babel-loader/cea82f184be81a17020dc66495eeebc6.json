{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\winco\\\\Desktop\\\\javascripts\\\\SKKUBird\\\\front\\\\Components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from \"react\";\nimport Form from \"antd/lib/form/Form\";\nimport { Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPostAction } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const {\n    id,\n    nickname\n  } = useSelector(state => state.user.me);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const imageInput = useRef();\n  const onsubmit = useCallback(() => {\n    dispatch(addPostAction({\n      id: 2,\n      User: {\n        id: id,\n        nickname: nickname\n      },\n      content: text,\n      Images: [],\n      Comments: []\n    }));\n    setText(\"\");\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      marginTop: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, imagePaths.map(y => __jsx(\"div\", {\n    key: y,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: y,\n    style: {\n      width: `200px`\n    },\n    alt: y,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/Components/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPostAction","PostForm","dispatch","imagePaths","state","post","id","nickname","user","me","text","setText","imageInput","onsubmit","User","content","Images","Comments","onClickImageUpload","current","click","onChangeText","e","target","value","marginTop","float","map","y","display","justifyContent","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\r\nimport Form from \"antd/lib/form/Form\";\r\nimport { Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPostAction } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const { id, nickname } = useSelector((state) => state.user.me);\r\n  const [text, setText] = useState(\"\");\r\n  const imageInput = useRef();\r\n\r\n  const onsubmit = useCallback(() => {\r\n    dispatch(\r\n      addPostAction({\r\n        id: 2,\r\n        User: {\r\n          id: id,\r\n          nickname: nickname,\r\n        },\r\n        content: text,\r\n        Images: [],\r\n        Comments: [],\r\n      })\r\n    );\r\n    setText(\"\");\r\n  }, []);\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n  const onChangeText = useCallback(\r\n    (e) => {\r\n      setText(e.target.value);\r\n    },\r\n    [text]\r\n  );\r\n  return (\r\n    <Form\r\n      style={{ marginTop: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onsubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((y) => (\r\n          <div key={y} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <img src={y} style={{ width: `200px` }} alt={y} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\winco\\\\Desktop\\\\javascripts\\\\SKKUBird\\\\front\\\\Components\\\\ImagesZoom\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slide from \"react-slick\";\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  useEffect(() => {\n    console.log(images);\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"\\uC0C1\\uC138\\uC774\\uBBF8\\uC9C0\"), __jsx(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"X\")), __jsx(Slide, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, images.map(y => __jsx(\"div\", {\n    key: y.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: y.src,\n    alt: y.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/Components/ImagesZoom/index.js"],"names":["React","useState","useEffect","PropTypes","Slide","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","console","log","slide","map","y","src","propTypes","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,GAFQ,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,EAKE,MAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,WAAW,EAAGK,KAAD,IAAWH,eAAe,CAACG,KAAD,CAFzC;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,YAAY,EAAE,CAJhB;AAKE,IAAA,cAAc,EAAE,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACO,GAAP,CAAYC,CAAD,IACV;AAAK,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,IAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAPF,CALF,CADF;AAuBD,CA7BD;;AA+BAV,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEH,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAA5B,EAAoCC,UADvB;AAErBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,IAAV,CAAeD;AAFH,CAAvB;AAKA,eAAed,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slide from \"react-slick\";\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  useEffect(() => {\r\n    console.log(images);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>상세이미지</h1>\r\n        <button onClick={onClose}>X</button>\r\n      </header>\r\n      <Slide\r\n        initialSlide={0}\r\n        afterChange={(slide) => setCurrentSlide(slide)}\r\n        infinite={true}\r\n        slidesToShow={1}\r\n        slidesToScroll={1}\r\n      >\r\n        <div>\r\n          {images.map((y) => (\r\n            <div key={y.src}>\r\n              <img src={y.src} alt={y.src} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n"]},"metadata":{},"sourceType":"module"}
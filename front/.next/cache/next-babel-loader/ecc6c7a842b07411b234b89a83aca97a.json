{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../actions\"; // import axios from \"axios\";\n// function loginAPI(data) {\n//   return axios.post(\"/api/login\", data);\n// }\n// function logoutAPI() {\n//   return axios.post(\"/api/logout\");\n// }\n// function signupAPI() {\n//   return axios.post(\"/api/signup\")\n// }\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: {} //result.data 고정\n\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data //err.response.data 고정\n\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS //   data: result.data, //result.data 고정\n\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data //err.response.data 고정\n\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signup() {\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS //   data: result.data,\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogin), //call\n          fork(watchLogout), fork(watchSignup)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/user.js"],"names":["login","logout","signup","watchLogin","watchLogout","watchSignup","userSaga","all","fork","put","takeLatest","delay","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","type","data","error","response"],"mappings":";;oDA0BUA,K;qDAgBAC,M;qDAeAC,M;qDAgBAC,U;qDAIAC,W;qDAGAC,W;qDAGeC,Q;;AAnFzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,eAPF,EAQEC,eARF,EASEC,eATF,QAUO,YAVP,C,CAWA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAAUpB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMW,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMF,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAET,cADE;AAERU,YAAAA,IAAI,EAAE,EAFE,CAEE;;AAFF,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMb,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAER,cADE;AAERU,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaF,IAFZ,CAEkB;;AAFlB,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUrB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMU,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMF,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEP,eADE,CAER;;AAFQ,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAML,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEN,eADE;AAERQ,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaF,IAFZ,CAEkB;;AAFlB,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUpB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMS,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMF,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEF,eADE,CAER;;AAFQ,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMV,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAED,eADE;AAERG,YAAAA,KAAK,EAAE,aAAID;AAFH,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUnB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACM,cAAD,EAAiBhB,KAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUI,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAACO,eAAD,EAAkBhB,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUI,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMK,UAAU,CAACQ,eAAD,EAAkBhB,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACL,UAAD,CADI,EACU;AAClBK,UAAAA,IAAI,CAACJ,WAAD,CAFI,EAGRI,IAAI,CAACH,WAAD,CAHI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\r\nimport {\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_OUT_REQUEST,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n} from \"../actions\";\r\n// import axios from \"axios\";\r\n\r\n// function loginAPI(data) {\r\n//   return axios.post(\"/api/login\", data);\r\n// }\r\n\r\n// function logoutAPI() {\r\n//   return axios.post(\"/api/logout\");\r\n// }\r\n\r\n// function signupAPI() {\r\n//   return axios.post(\"/api/signup\")\r\n// }\r\n\r\nfunction* login() {\r\n  try {\r\n    // const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: {}, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    // const result = yield call(logoutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\nfunction* signup() {\r\n  try {\r\n    // const result = yield call(signupAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin), //call\r\n    fork(watchLogout),\r\n    fork(watchSignup),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, take, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction loginAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction login() {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: \"LOG_IN_SUCCESS\",\n            data: result.data //result.data 고정\n\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: \"LOG_IN_FAILURE\",\n            data: _context.t0.response.data //err.response.data 고정\n\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(\"LOG_OUT\");\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return take(\"LOG_IN\", login);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return take(\"ADD_POST\");\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), //call\n          fork(watchLogout), fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/javascripts/SKKUBird/front/sagas/index.js"],"names":["login","watchLogout","watchLogin","watchAddPost","rootSaga","all","fork","take","call","put","axios","loginAPI","post","result","type","data","response"],"mappings":";;oDAOUA,K;qDAeAC,W;qDAIAC,U;qDAIAC,Y;qDAIeC,Q;;AAlCzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,SAAUZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMQ,IAAI,CAACG,QAAD,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAAA;AAGI,iBAAMJ,GAAG,CAAC;AACRK,YAAAA,IAAI,EAAE,gBADE;AAERC,YAAAA,IAAI,EAAEF,MAAM,CAACE,IAFL,CAEW;;AAFX,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMN,GAAG,CAAC;AACRK,YAAAA,IAAI,EAAE,gBADE;AAERC,YAAAA,IAAI,EAAE,YAAIC,QAAJ,CAAaD,IAFX,CAEiB;;AAFjB,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUd,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,IAAI,CAAC,SAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUL,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMK,IAAI,CAAC,QAAD,EAAWP,KAAX,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUG,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,IAAI,CAAC,UAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACJ,UAAD,CADI,EACU;AAClBI,UAAAA,IAAI,CAACL,WAAD,CAFI,EAGRK,IAAI,CAACH,YAAD,CAHI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, take, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction loginAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\n\r\nfunction* login() {\r\n  try {\r\n    const result = yield call(loginAPI);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: err.response.data, //err.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield take(\"LOG_OUT\");\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield take(\"LOG_IN\", login);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield take(\"ADD_POST\");\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchLogin), //call\r\n    fork(watchLogout),\r\n    fork(watchAddPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}